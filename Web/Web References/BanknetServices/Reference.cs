//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace Web.BanknetServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PaymentGatewaySoap11Binding", Namespace="http://pgWebservices")]
    public partial class PaymentGateway : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QuerryBillStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmTransactionResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback Send_GoodInfo_Ext2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Send_GoodInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Send_GoodInfo_ExtOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PaymentGateway() {
            this.Url = global::Web.Properties.Settings.Default.Web_BanknetServices_PaymentGateway;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QuerryBillStatusCompletedEventHandler QuerryBillStatusCompleted;
        
        /// <remarks/>
        public event ConfirmTransactionResultCompletedEventHandler ConfirmTransactionResultCompleted;
        
        /// <remarks/>
        public event Send_GoodInfo_Ext2CompletedEventHandler Send_GoodInfo_Ext2Completed;
        
        /// <remarks/>
        public event Send_GoodInfoCompletedEventHandler Send_GoodInfoCompleted;
        
        /// <remarks/>
        public event Send_GoodInfo_ExtCompletedEventHandler Send_GoodInfo_ExtCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:QuerryBillStatus", RequestNamespace="http://pgWebservices", ResponseNamespace="http://pgWebservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string QuerryBillStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_key) {
            object[] results = this.Invoke("QuerryBillStatus", new object[] {
                        Merchant_trans_id,
                        Trans_id,
                        Merchant_code,
                        Trans_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QuerryBillStatusAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_key) {
            this.QuerryBillStatusAsync(Merchant_trans_id, Trans_id, Merchant_code, Trans_key, null);
        }
        
        /// <remarks/>
        public void QuerryBillStatusAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_key, object userState) {
            if ((this.QuerryBillStatusOperationCompleted == null)) {
                this.QuerryBillStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerryBillStatusOperationCompleted);
            }
            this.InvokeAsync("QuerryBillStatus", new object[] {
                        Merchant_trans_id,
                        Trans_id,
                        Merchant_code,
                        Trans_key}, this.QuerryBillStatusOperationCompleted, userState);
        }
        
        private void OnQuerryBillStatusOperationCompleted(object arg) {
            if ((this.QuerryBillStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerryBillStatusCompleted(this, new QuerryBillStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ConfirmTransactionResult", RequestNamespace="http://pgWebservices", ResponseNamespace="http://pgWebservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string ConfirmTransactionResult([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_result, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_key) {
            object[] results = this.Invoke("ConfirmTransactionResult", new object[] {
                        Merchant_trans_id,
                        Trans_id,
                        Merchant_code,
                        Trans_result,
                        Trans_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmTransactionResultAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_result, string Trans_key) {
            this.ConfirmTransactionResultAsync(Merchant_trans_id, Trans_id, Merchant_code, Trans_result, Trans_key, null);
        }
        
        /// <remarks/>
        public void ConfirmTransactionResultAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_result, string Trans_key, object userState) {
            if ((this.ConfirmTransactionResultOperationCompleted == null)) {
                this.ConfirmTransactionResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTransactionResultOperationCompleted);
            }
            this.InvokeAsync("ConfirmTransactionResult", new object[] {
                        Merchant_trans_id,
                        Trans_id,
                        Merchant_code,
                        Trans_result,
                        Trans_key}, this.ConfirmTransactionResultOperationCompleted, userState);
        }
        
        private void OnConfirmTransactionResultOperationCompleted(object arg) {
            if ((this.ConfirmTransactionResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTransactionResultCompleted(this, new ConfirmTransactionResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Send_GoodInfo_Ext2", RequestNamespace="http://pgWebservices", ResponseNamespace="http://pgWebservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string Send_GoodInfo_Ext2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Country_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Good_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml_description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Net_cost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Ship_fee, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tax, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_success, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_fail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string selected_bank, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string service_code) {
            object[] results = this.Invoke("Send_GoodInfo_Ext2", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key,
                        selected_bank,
                        service_code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Send_GoodInfo_Ext2Async(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, string selected_bank, string service_code) {
            this.Send_GoodInfo_Ext2Async(Merchant_trans_id, Merchant_code, Country_code, Good_code, Xml_description, Net_cost, Ship_fee, Tax, Url_success, Url_fail, Trans_key, selected_bank, service_code, null);
        }
        
        /// <remarks/>
        public void Send_GoodInfo_Ext2Async(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, string selected_bank, string service_code, object userState) {
            if ((this.Send_GoodInfo_Ext2OperationCompleted == null)) {
                this.Send_GoodInfo_Ext2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_GoodInfo_Ext2OperationCompleted);
            }
            this.InvokeAsync("Send_GoodInfo_Ext2", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key,
                        selected_bank,
                        service_code}, this.Send_GoodInfo_Ext2OperationCompleted, userState);
        }
        
        private void OnSend_GoodInfo_Ext2OperationCompleted(object arg) {
            if ((this.Send_GoodInfo_Ext2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send_GoodInfo_Ext2Completed(this, new Send_GoodInfo_Ext2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Send_GoodInfo", RequestNamespace="http://pgWebservices", ResponseNamespace="http://pgWebservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string Send_GoodInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Country_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Good_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml_description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Net_cost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Ship_fee, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tax, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_success, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_fail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_key) {
            object[] results = this.Invoke("Send_GoodInfo", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Send_GoodInfoAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key) {
            this.Send_GoodInfoAsync(Merchant_trans_id, Merchant_code, Country_code, Good_code, Xml_description, Net_cost, Ship_fee, Tax, Url_success, Url_fail, Trans_key, null);
        }
        
        /// <remarks/>
        public void Send_GoodInfoAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, object userState) {
            if ((this.Send_GoodInfoOperationCompleted == null)) {
                this.Send_GoodInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_GoodInfoOperationCompleted);
            }
            this.InvokeAsync("Send_GoodInfo", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key}, this.Send_GoodInfoOperationCompleted, userState);
        }
        
        private void OnSend_GoodInfoOperationCompleted(object arg) {
            if ((this.Send_GoodInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send_GoodInfoCompleted(this, new Send_GoodInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Send_GoodInfo_Ext", RequestNamespace="http://pgWebservices", ResponseNamespace="http://pgWebservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string Send_GoodInfo_Ext([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Country_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Good_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Xml_description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Net_cost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Ship_fee, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tax, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_success, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Url_fail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Trans_key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string selected_bank) {
            object[] results = this.Invoke("Send_GoodInfo_Ext", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key,
                        selected_bank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Send_GoodInfo_ExtAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, string selected_bank) {
            this.Send_GoodInfo_ExtAsync(Merchant_trans_id, Merchant_code, Country_code, Good_code, Xml_description, Net_cost, Ship_fee, Tax, Url_success, Url_fail, Trans_key, selected_bank, null);
        }
        
        /// <remarks/>
        public void Send_GoodInfo_ExtAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, string selected_bank, object userState) {
            if ((this.Send_GoodInfo_ExtOperationCompleted == null)) {
                this.Send_GoodInfo_ExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_GoodInfo_ExtOperationCompleted);
            }
            this.InvokeAsync("Send_GoodInfo_Ext", new object[] {
                        Merchant_trans_id,
                        Merchant_code,
                        Country_code,
                        Good_code,
                        Xml_description,
                        Net_cost,
                        Ship_fee,
                        Tax,
                        Url_success,
                        Url_fail,
                        Trans_key,
                        selected_bank}, this.Send_GoodInfo_ExtOperationCompleted, userState);
        }
        
        private void OnSend_GoodInfo_ExtOperationCompleted(object arg) {
            if ((this.Send_GoodInfo_ExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send_GoodInfo_ExtCompleted(this, new Send_GoodInfo_ExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QuerryBillStatusCompletedEventHandler(object sender, QuerryBillStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerryBillStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerryBillStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmTransactionResultCompletedEventHandler(object sender, ConfirmTransactionResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTransactionResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmTransactionResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Send_GoodInfo_Ext2CompletedEventHandler(object sender, Send_GoodInfo_Ext2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send_GoodInfo_Ext2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send_GoodInfo_Ext2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Send_GoodInfoCompletedEventHandler(object sender, Send_GoodInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send_GoodInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send_GoodInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Send_GoodInfo_ExtCompletedEventHandler(object sender, Send_GoodInfo_ExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send_GoodInfo_ExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send_GoodInfo_ExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591